const symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üçâ', 'üçì', '‚≠ê', 'üîî']; // –°–∏–º–≤–æ–ª—ã –¥–ª—è –±–∞—Ä–∞–±–∞–Ω–æ–≤

let reels = [[], [], [], []]; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤
let spinning = false; // –§–ª–∞–≥ –≤—Ä–∞—â–µ–Ω–∏—è
const reelElements = [
    document.getElementById('reel1'),
    document.getElementById('reel2'),
    document.getElementById('reel3'),
    document.getElementById('reel4'),
];

let luckFactor = 1.0; // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–¥–∞—á–∏ (1.0 = –≤—Å–µ–≥–¥–∞ –¥–∂–µ–∫–ø–æ—Ç, 0.0 = —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç)

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
function getRandomSymbol() {
    return symbols[Math.floor(Math.random() * symbols.length)];
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤
function initializeReels() {
    reels.forEach((reel, index) => {
        for (let i = 0; i < 8; i++) {
            reel.push(getRandomSymbol());
        }
        updateReelDisplay(index);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–∞
function updateReelDisplay(index) {
    reelElements[index].innerHTML = reels[index]
        .slice(0, 5) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤
        .map(symbol => `<div>${symbol}</div>`)
        .join('');
}

// –§—É–Ω–∫—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤
function spinReels() {
    if (spinning) return; // –ï—Å–ª–∏ –≤—Ä–∞—â–µ–Ω–∏–µ —É–∂–µ –∏–¥–µ—Ç, –≤—ã—Ö–æ–¥–∏–º
    spinning = true;

    const spinPromises = reels.map((_, index) => {
        return new Promise((resolve) => {
            startReelSpin(index);
            setTimeout(() => {
                stopReelSpin(index, resolve); // –ü–ª–∞–≤–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞—Ä–∞–±–∞–Ω–∞
            }, 1000 + index * 500); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞–±–∞–Ω–∞
        });
    });

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–¥–∞—á–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–π
    enforceLuckDuringSpin();

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–π
    Promise.all(spinPromises).then(() => {
        spinning = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –≤—Ä–∞—â–µ–Ω–∏—è
        logVisibleSymbols(); // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        analyzeWinning(); // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–∏–≥—Ä—ã—à
    });
}

// –ù–∞—á–∞—Ç—å –≤—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–∞
function startReelSpin(index) {
    const intervalId = setInterval(() => {
        const first = reels[index].shift(); // –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        reels[index].push(getRandomSymbol()); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª
        updateReelDisplay(index);
    }, 50); // –°–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è

    reelElements[index].dataset.intervalId = intervalId; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
}

// –ü–ª–∞–≤–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞—Ä–∞–±–∞–Ω–∞
function stopReelSpin(index, resolve) {
    const reel = reelElements[index];
    let intervalId = reel.dataset.intervalId;

    clearInterval(intervalId); // –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–∞—â–µ–Ω–∏–µ
    let remainingSpins = 5; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è "–ø–ª–∞–≤–Ω—ã—Ö" –ø—Ä–æ–∫—Ä—É—Ç–æ–≤
    let speed = 100; // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–ª–∞–≤–Ω–æ–≥–æ –∑–∞–º–µ–¥–ª–µ–Ω–∏—è

    intervalId = setInterval(() => {
        const first = reels[index].shift(); // –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        reels[index].push(getRandomSymbol()); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        updateReelDisplay(index);

        remainingSpins--;
        speed += 50; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏—è

        if (remainingSpins <= 0) {
            clearInterval(intervalId); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ
            resolve(); // –°–æ–æ–±—â–∞–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        }
    }, speed);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —É–¥–∞—á–∏ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏–π
function enforceLuckDuringSpin() {
    if (Math.random() < luckFactor) {
        // –í—ã–±–∏—Ä–∞–µ–º –¥–∂–µ–∫–ø–æ—Ç-—Å–∏–º–≤–æ–ª
        const jackpotSymbol = getRandomSymbol();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –±–∞—Ä–∞–±–∞–Ω–∞—Ö
        reels.forEach((reel) => {
            reel[2] = jackpotSymbol; // –°—Ç–∞–≤–∏–º –¥–∂–µ–∫–ø–æ—Ç –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É
        });
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
function logVisibleSymbols() {
    const centralRowSymbols = reels.map(reel => reel[2]); // –ò–∑–≤–ª–µ–∫–∞–µ–º 3-–π —Å–∏–º–≤–æ–ª –∏–∑ –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞–±–∞–Ω–∞
    console.log('Central row result:', centralRowSymbols.join(' | '));
}

// –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–∞
function analyzeWinning() {
    const centralRowSymbols = reels.map(reel => reel[2]); // –ò–∑–≤–ª–µ–∫–∞–µ–º 3-–π —Å–∏–º–≤–æ–ª –∏–∑ –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞–±–∞–Ω–∞
    const symbolCount = centralRowSymbols.reduce((counts, symbol) => {
        counts[symbol] = (counts[symbol] || 0) + 1;
        return counts;
    }, {});

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    const maxCount = Math.max(...Object.values(symbolCount));

    let winAmount = 0;
    if (maxCount === 4) {
        winAmount = 1; // 4 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
    } else if (maxCount === 3) {
        winAmount = 0.75; // 3 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
    } else if (maxCount === 2) {
        winAmount = 0.5; // 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
    }

    console.log(`Winning analysis: ${centralRowSymbols.join(' | ')}`);
    console.log(`Winning amount: ${winAmount}`);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
document.getElementById('spinButton').addEventListener('click', spinReels);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
initializeReels();
